<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试语雀WEBHOOKS</title>
      <link href="2021/04/18/yuque/%E6%B5%8B%E8%AF%95%E8%AF%AD%E9%9B%80WEBHOOKS/"/>
      <url>2021/04/18/yuque/%E6%B5%8B%E8%AF%95%E8%AF%AD%E9%9B%80WEBHOOKS/</url>
      
        <content type="html"><![CDATA[<p>测试语雀 WEBHOOKS<br>测试语雀 WEBHOOKS<br>测试语雀 WEBHOOKS 测试语雀 WEBHOOKS+<br>  测试语雀 WEBHOOKS<br>测试语雀 WEBHOOKS<br>测试语雀 WEBHOOKS 测试语雀 WEBHOOKS<br>  测试语雀 WEBHOOKS<br>测试语雀 WEBHOOKS<br>测试语雀 WEBHOOKS 测试语雀 WEBHOOKS   测试语雀 WEBHOOKS</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试是不是自动发布</title>
      <link href="2021/04/15/yuque/%E6%B5%8B%E8%AF%95%E6%98%AF%E4%B8%8D%E6%98%AF%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/"/>
      <url>2021/04/15/yuque/%E6%B5%8B%E8%AF%95%E6%98%AF%E4%B8%8D%E6%98%AF%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2020/png/268938/1594907728538-4ded4257-da88-4361-8f2f-e8ba4d107e75.png#from=paste&height=534&id=T4Ixu&margin=%5Bobject%20Object%5D&originHeight=534&originWidth=1023&originalType=url&status=done&style=none&width=1023"><br>图片测试</p><p>asdfasdfasdfasdfasdfasdf123123123123123123123123123<br>asdfasdf<br>asdf<br>asdf<br>asdf<br>asd<br>fasefefefefefefefefef<br>dfas<br>df<br>asdfefefefefefefefefefwefsadfawefwefsef<br>ads 阿斯顿发大地方 打发第三方 阿发达 打发第三方 阿发达 打发第三方 阿发达 打发第三方 阿发达 打发第三方 阿发达<br>fa<br>sdf<br>af<br>asd<br>fas<br>df<br>sadf<br>sadf<br>asd<br>f<br>fdsadsf<br>asdf<br>adsfsdfa df 测试自动发布功能</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>好看的主题</title>
      <link href="2021/04/12/pqg3q8/"/>
      <url>2021/04/12/pqg3q8/</url>
      
        <content type="html"><![CDATA[<p>tags: [travis, hexo, 语雀]</p><p>categories: [blog]</p><p><a href="https://github.com/litten/hexo-theme-yilia.git">https://github.com/litten/hexo-theme-yilia.git</a> themes/yilia</p><p>asdfasdf<br>asd<br>fasd<br>fasd<br>fa<br>sdf<br>asdf<br>asd<br>fasdfsdfasdfasd</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建Github静态博客</title>
      <link href="2021/04/11/ck7dgu/"/>
      <url>2021/04/11/ck7dgu/</url>
      
        <content type="html"><![CDATA[<h1 id="1-环境环境"><a href="#1-环境环境" class="headerlink" title="1. 环境环境"></a>1. 环境环境</h1><h2 id="1-1-安装-Git"><a href="#1-1-安装-Git" class="headerlink" title="1.1 安装 Git"></a>1.1 安装 Git</h2><p>请参考【1】</p><h2 id="1-2-安装-node-js"><a href="#1-2-安装-node-js" class="headerlink" title="1.2 安装 node.js"></a>1.2 安装 node.js</h2><p>下载：<a href="http://nodejs.org/download/">http://nodejs.org/download/</a><br>可以下载  node-v0.10.33-x64.msi<br>安装时直接保持默认配置即可。<br>NOTE：Hexo 3.9.0 要求 nodejs 版本&gt;6.9.0</p><p>Ubuntu 下，直接执行下面的命令安装即可：<br>sudo apt-get install nodejs<br>sudo apt-get install npm</p><h1 id="2-配置-Github"><a href="#2-配置-Github" class="headerlink" title="2. 配置 Github"></a>2. 配置 Github</h1><h2 id="1-1-建立-Repository"><a href="#1-1-建立-Repository" class="headerlink" title="1.1 建立 Repository"></a>1.1 建立 Repository</h2><p>建立与你用户名对应的仓库，仓库名必须为【your_user_name**.github.io**】 eg: sbwit.github.io</p><h2 id="1-2-配置-SSH-Key"><a href="#1-2-配置-SSH-Key" class="headerlink" title="1.2 配置 SSH-Key"></a>1.2 配置 SSH-Key</h2><p>参考【1】</p><h1 id="3-安装-Hexo"><a href="#3-安装-Hexo" class="headerlink" title="3. 安装 Hexo"></a>3. 安装 Hexo</h1><p>关于 Hexo 的安装配置过程，请以官方 Hexo【2】给出的步骤为准。</p><h2 id="3-1-Installation"><a href="#3-1-Installation" class="headerlink" title="3.1 Installation"></a>3.1 Installation</h2><p>打开 Git 命令行，执行如下命令</p><pre class="language-shell" data-language="shell"><code class="language-shell">$ npm install -g hexo</code></pre><h2 id="3-2-Quick-Start"><a href="#3-2-Quick-Start" class="headerlink" title="3.2 Quick Start"></a>3.2 Quick Start</h2><p>** 1. Setup your blog**<br>在电脑中建立一个名字叫「Hexo」的文件夹（比如我建在了 D:\Hexo），然后在此文件夹中右键打开 Git Bash。执行下面的命令</p><pre class="language-shell" data-language="shell"><code class="language-shell">$ hexo init[info] Copying data[info] You are almost done! Don&#39;t forget to run &#96;npm install&#96; before you start blogging with Hexo!</code></pre><p>Hexo 随后会自动在目标文件夹建立网站所需要的文件。然后按照提示，运行  npm install（在  /D/Hexo 下）</p><pre class="language-shell" data-language="shell"><code class="language-shell">npm install</code></pre><p>会在 D:\Hexo 目录中安装  node_modules。<br><strong>2. Start the server</strong><br>运行下面的命令（在  /D/Hexo 下）</p><pre class="language-shell" data-language="shell"><code class="language-shell">hexo server[info] Hexo is running at http:&#x2F;&#x2F;localhost:4000&#x2F;. Press Ctrl+C to stop</code></pre><p>.<br>表明 Hexo Server 已经启动了，在浏览器中打开  <a href="http://localhost:4000/%EF%BC%8C%E8%BF%99%E6%97%B6%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0">http://localhost:4000/，这时可以看到</a> Hexo 已为你生成了一篇 blog。<br>你可以按 Ctrl+C 停止 Server。<br><strong>3. Create a new post</strong><br>新打开一个 git bash 命令行窗口，cd 到/D/Hexo 下，执行下面的命令<br>$ hexo new “My New Post”<br>[info] File created at d:\Hexo\source_posts\My-New-Post.md<br>刷新 <a href="http://localhost:4000/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%8F%91%E7%8E%B0%E5%B7%B2%E7%94%9F%E6%88%90%E4%BA%86%E4%B8%80%E7%AF%87%E6%96%B0%E6%96%87%E7%AB%A0">http://localhost:4000/，可以发现已生成了一篇新文章</a>  “My New Post”。<br><strong>NOTE：</strong><br>有一个问题，发现  “My New Post” 被发了 2 遍，在 Hexo server 所在的 git bash 窗口也能看到 create 了 2 次。<br>$ hexo server<br>[info] Hexo is running at <a href="http://localhost:4000/">http://localhost:4000/</a>. Press Ctrl+C to stop.<br><strong>[create] d:\Hexo\source_posts\My-New-Post.md</strong><br>[create] d:\Hexo\source_posts\My-New-Post.md<br>经验证，在 hexo new “My New Post”  时，如果按 Ctrl+C 将 hexo server 停掉，就不会出现发 2 次的问题了。<br>所以，在 hexo new 文章时，需要 stop server。<br><strong>4. Generate static files</strong><br>执行下面的命令，将 markdown 文件生成静态网页。<br>$ hexo generate<br>该命令执行完后，会在  D:\Hexo\public\ 目录下生成一系列 html，css 等文件。<br><strong>5. 编辑文章</strong><br>hexo new “My New Post”会在 D:\Hexo\source_posts 目录下生成一个 markdown 文件：My-New-Post.md<br>可以使用一个支持 markdown 语法的编辑器（比如 Sublime Text 2）来编辑该文件。<br><strong>6. 部署到 Github</strong><br>部署到 Github 前需要配置_config.yml 文件，首先找到下面的内容</p><h1 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h1><h2 id="Docs-http-hexo-io-docs-deployment-html"><a href="#Docs-http-hexo-io-docs-deployment-html" class="headerlink" title="Docs: http://hexo.io/docs/deployment.html"></a>Docs: <a href="http://hexo.io/docs/deployment.html">http://hexo.io/docs/deployment.html</a></h2><p>deploy:<br>  type:<br>然后将它们修改为</p><h1 id="Deployment-1"><a href="#Deployment-1" class="headerlink" title="Deployment"></a>Deployment</h1><h2 id="Docs-http-hexo-io-docs-deployment-html-1"><a href="#Docs-http-hexo-io-docs-deployment-html-1" class="headerlink" title="Docs: http://hexo.io/docs/deployment.html"></a>Docs: <a href="http://hexo.io/docs/deployment.html">http://hexo.io/docs/deployment.html</a></h2><p>deploy:<br>  type: github<br>  repository: <strong><a href="mailto:&#103;&#x69;&#116;&#64;&#103;&#x69;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;">&#103;&#x69;&#116;&#64;&#103;&#x69;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#x6f;&#x6d;</a>:zhchnchn/zhchnchn.github.io.git</strong><br>  branch: master<br><strong>NOTE1:</strong><br>Repository：必须是 SSH 形式的 url（<a href="mailto:&#103;&#105;&#x74;&#x40;&#x67;&#x69;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;">&#103;&#105;&#x74;&#x40;&#x67;&#x69;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;</a>:zhchnchn/zhchnchn.github.io.git），而不能是 HTTPS 形式的 url（<a href="https://github.com/zhchnchn/zhchnchn.github.io.git">https://github.com/zhchnchn/zhchnchn.github.io.git</a>），否则会出现错误：<br>$ hexo deploy<br>[info] Start deploying: github<br>[error] <a href="https://github.com/zhchnchn/zhchnchn.github.io">https://github.com/zhchnchn/zhchnchn.github.io</a> is not a valid repositor URL!<br>使用 SSH url，如果电脑没有开放 SSH 端口，会致部署失败。<br>fatal: Could not read from remote repository.</p><p>Please make sure you have the correct access rights<br>and the repository exists.<br><strong>NOTE2：</strong><br>如果你是为一个项目制作网站，那么需要把 branch 设置为 gh-pages。<br><strong>7. 测试</strong><br>当部署完成后，在浏览器中打开<a href="http://zhchnchn.github.io/">http://zhchnchn.github.io/</a>（<a href="https://zhchnchn.github.io/%EF%BC%89">https://zhchnchn.github.io/）</a> ，正常显示网页，表明部署成功。<br><strong>8. 总结：部署步骤</strong><br>每次部署的步骤，可按以下三步来进行。<br>hexo clean<br>hexo generate<br>hexo deploy 9. 总结：本地调试</p><ol><li>在执行下面的命令后，<br>$ hexo g #生成<br>$ hexo s #启动本地服务，进行文章预览调试<br>浏览器输入<a href="http://localhost:4000%EF%BC%8C%E6%9F%A5%E7%9C%8B%E6%90%AD%E5%BB%BA%E6%95%88%E6%9E%9C%E3%80%82%E6%AD%A4%E5%90%8E%E7%9A%84%E6%AF%8F%E6%AC%A1%E5%8F%98%E6%9B%B4_config.yml">http://localhost:4000，查看搭建效果。此后的每次变更_config.yml</a> 文件或者新建文件都可以先用此命令调试，尤其是当你想调试新添加的主题时。</li><li>可以用简化的一条命令<br>hexo s -g</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="2021/04/11/gc3dh9/"/>
      <url>2021/04/11/gc3dh9/</url>
      
        <content type="html"><![CDATA[<p>asdfasdfasdfasdfasdfsdfasdfasdfasdfasdf<br>asdf<br>asd<br>fasd<br>fas<br>dfas<br>df</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DEMO</title>
      <link href="2017/12/13/yuque/DEMO/"/>
      <url>2017/12/13/yuque/DEMO/</url>
      
        <content type="html"><![CDATA[<p>sdf</p><p><img src="https://cdn.nlark.com/yuque/0/2021/jpeg/131683/1618478553167-dcb6c430-0bca-48e3-a79a-5a44244cc36b.jpeg#height=215&id=fBaDt&margin=%5Bobject%20Object%5D&name=15.jpg&originHeight=860&originWidth=860&originalType=binary&size=80189&status=done&style=none&width=215" alt="15.jpg"></p><p>x33333333333333333333<br>gegegegegegegge<br>语雀帖子的配置</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Blog CI/CD<span class="token key atrule">on</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>push<span class="token punctuation">,</span> repository_dispatch<span class="token punctuation">]</span><span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">blog-cicd</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> Hexo blog build &amp; deploy    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">env</span><span class="token punctuation">:</span>      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai    <span class="token key atrule">steps</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout codes      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup node      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1      <span class="token key atrule">with</span><span class="token punctuation">:</span>        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">'12.x'</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Cache node modules      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v1      <span class="token key atrule">with</span><span class="token punctuation">:</span>        <span class="token key atrule">path</span><span class="token punctuation">:</span> ~/.npm        <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> runner.os <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>node<span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> hashFiles('<span class="token important">**/package-lock.json')</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">        npm install hexo-cli -g        npm install yuque-hexo -g        npm install        yuque-hexo sync</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Generate files      <span class="token key atrule">run</span><span class="token punctuation">:</span> hexo generate    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy blog    <span class="token key atrule">evn</span><span class="token punctuation">:</span>      <span class="token key atrule">Github_Pages</span><span class="token punctuation">:</span> github.com/sbwit/sbwit.github.io        <span class="token key atrule">Github_Token</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.TOKEN_GITHUBAPI <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">        git clone "https://$&#123;Github_Pages&#125;" deploy_git        mv ./deploy_git/.git ./public/        cd ./public        git config user.name "sbwit"        git config user.email "17740857130@qq.com"        git add .        git commit -m "GitHub Actions Auto Builder at $(date +'%Y-%m-%d %H:%M:%S')"        git push --force --quiet "https://$&#123;Github_Token&#125;@$&#123;Github_Pages&#125;" master:master</span></code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># -*- coding: utf8 -*-</span>import requestsdef main_handler(event<span class="token punctuation">,</span> <span class="token key atrule">context)</span><span class="token punctuation">:</span>r = requests.post("https<span class="token punctuation">:</span>//api.github.com/repos/sbwit/sbwit.hexo/dispatches"<span class="token punctuation">,</span>json = <span class="token punctuation">&#123;</span><span class="token key atrule">"event_type"</span><span class="token punctuation">:</span> <span class="token string">"start"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>headers = <span class="token punctuation">&#123;</span>"User<span class="token punctuation">-</span>Agent"<span class="token punctuation">:</span><span class="token string">'curl/7.52.1'</span><span class="token punctuation">,</span><span class="token key atrule">'Content-Type'</span><span class="token punctuation">:</span> <span class="token string">'application/json'</span><span class="token punctuation">,</span><span class="token key atrule">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'application/vnd.github.everest-preview+json'</span><span class="token punctuation">,</span><span class="token key atrule">'Authorization'</span><span class="token punctuation">:</span> <span class="token string">'token GITHUB_TOKEN(自己的)'</span><span class="token punctuation">&#125;</span>)<span class="token key atrule">if r.status_code == 204</span><span class="token punctuation">:</span>return "This's OK<span class="token tag">!</span>"<span class="token key atrule">else</span><span class="token punctuation">:</span>return r.status_code</code></pre><p>官方的配置</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># workflow name</span><span class="token key atrule">name</span><span class="token punctuation">:</span> CI Hexo<span class="token comment"># master branch on push, auto run</span><span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> master<span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">Deploy-Pages</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy Hexo Public To Pages    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token comment"># check it to your workflow can access it</span>      <span class="token comment"># from: https://github.com/actions/checkout</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout Repository master branch        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master      <span class="token comment"># from: https://github.com/actions/setup-node</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Node.js 10.x        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@master        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">"12.14"</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Git Infomation        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          git config --global user.name 'sbwit'           git config --global user.email '17740857130@163.com'</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Get Latest Commit Message        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          git log --pretty=format:"%s from Github Actions at `date +"%Y-%m-%d %H:%M:%S"`" --date=short -n 1 > commit-message.log</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Hexo Dependencies        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          npm install hexo-cli -g           npm install</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Generate public files        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          hexo clean hexo generate</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy To Github Pages        <span class="token key atrule">env</span><span class="token punctuation">:</span>          <span class="token key atrule">Github_Pages</span><span class="token punctuation">:</span> github.com/sbwit/sbwit.github.io          <span class="token key atrule">Github_Token</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.TOKEN_GITHUBAPI <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          git clone https://$&#123;Github_Pages&#125; .github_pages           cd .github_pages           git checkout master           cd ../           mv .github_pages/.git/ ./public/           cd ./public/           git add .           git commit -F ../commit-message.log           git push --force --quiet "https://$&#123;Github_Token&#125;@$&#123;Github_Pages&#125;" master:master</span></code></pre><p>asdfasdfasdfasdfasdfasdfasdf</p><p>asdfasdfasdfasdf</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
